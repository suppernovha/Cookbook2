{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport function useFetch(url) {\n  _s();\n  const [data, setData] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  //rajouter l'erreur\n\n  useEffect(() => {\n    if (!url) return;\n    async function fetchData() {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n      setLoading(false);\n    }\n    setLoading(true);\n    fetchData();\n  }, [url]);\n  return {\n    isLoading,\n    data\n  };\n}\n_s(useFetch, \"JHLleAE5M+P8W9xD7jjq5OAIexc=\");","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isLoading","setLoading","fetchData","response","fetch","json"],"sources":["/Users/anthonyjacq/Library/Mobile Documents/com~apple~CloudDocs/LABO/CODE/perso/cookBook/src/hooks/index.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport function useFetch(url) {\n    const [data, setData] = useState({})\n    const [isLoading, setLoading ] = useState(true)\n    //rajouter l'erreur\n\n    useEffect(() => {\n        if (!url) return\n\n        async function fetchData() {\n            const response = await fetch(url)\n            const data = await response.json()\n            setData(data)\n            setLoading(false)\n        }\n        setLoading(true)\n        fetchData()\n    }, [url])\n    return { isLoading, data }\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,SAASC,QAAQA,CAACC,GAAG,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACO,SAAS,EAAEC,UAAU,CAAE,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC/C;;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACE,GAAG,EAAE;IAEV,eAAeM,SAASA,CAAA,EAAG;MACvB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAG,CAAC;MACjC,MAAME,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClCN,OAAO,CAACD,IAAI,CAAC;MACbG,UAAU,CAAC,KAAK,CAAC;IACrB;IACAA,UAAU,CAAC,IAAI,CAAC;IAChBC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,GAAG,CAAC,CAAC;EACT,OAAO;IAAEI,SAAS;IAAEF;EAAK,CAAC;AAC9B;AAACD,EAAA,CAlBeF,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}